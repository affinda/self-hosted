version: "3.8"

volumes: # Note these will be prefixed by affinda_ when created by docker compose
  pgdata_selfhosted:
  affinda_shared:
  opensearch-data:


networks:
  default:
    name: affinda_selfhosted_shared
    driver: bridge
    ipam:
      config:
        - subnet: 192.168.34.0/24

services:
  # Local dev containers
  text_extraction:
    image: affinda/text_extraction:6.31.47
    expose:
      - "${TEXT_EXTRACTION_PORT:-5010}"
    deploy:
      replicas: 3
    environment:
      NUM_WORKERS: "1"
      SENTRY_DSN_TYPE: "${SENTRY_DSN_TYPE:-DEV}"
      SENTRY_ENABLED: "0"
      SENTRY_ENVIRONMENT: "${SENTRY_ENVIRONMENT:-text_extraction-selfhosted}"
      TEXT_EXTRACTION_PORT: "${TEXT_EXTRACTION_PORT:-5010}"

  ocr:
    image: affinda/ocr:6.31.47
    expose:
      - "${OCR_PORT:-5011}"
    deploy:
      replicas: 2 # Increase this if you convert a lot of images
    environment:
      NUM_WORKERS: "1"
      OCR_PORT: "${OCR_PORT:-5011}"
      SENTRY_DSN_TYPE: "${SENTRY_DSN_TYPE:-DEV}"
      SENTRY_ENABLED: "0"
      SENTRY_ENVIRONMENT: "${SENTRY_ENVIRONMENT:-ocr-selfhosted}"


  pdfkit:
    image: affinda/pdfkit:6.31.47
    expose:
      - "${PDFKIT_PORT:-5012}"
    deploy:
      replicas: 1 # Increase if you convert a lot html files
    environment:
      NUM_WORKERS: "1"
      PDFKIT_PORT: "${PDFKIT_PORT:-5012}"
      SENTRY_DSN_TYPE: "${SENTRY_DSN_TYPE:-DEV}"
      SENTRY_ENABLED: "0"
      SENTRY_ENVIRONMENT: "${SENTRY_ENVIRONMENT:-pdfkit-selfhosted}"


  libre_office:
    image: affinda/libre_office:6.31.47
    hostname: libreoffice
    expose:
      - "${LIBRE_OFFICE_PORT:-5013}"
    deploy:
      replicas: 2 # Increase this if you convert a lot of docx files
    environment:
      LIBRE_OFFICE_PORT: "${LIBRE_OFFICE_PORT:-5013}"


  inference:
    image: affinda/affinda-inference-selfhosted-resumes:6.31.47
    ports:
      - "${TORCHSERVE_INFERENCE_PORT:-5014}:${TORCHSERVE_INFERENCE_PORT:-5014}"
      - "${TORCHSERVE_MANAGEMENT_PORT:-5015}:${TORCHSERVE_MANAGEMENT_PORT:-5015}"
    environment:
      SENTRY_DSN_TYPE: "${SENTRY_DSN_TYPE:-DEV}"
      SENTRY_ENABLED: "0"
      SENTRY_ENVIRONMENT: "${SENTRY_ENVIRONMENT:-inference-selfhosted}"
      TS_INFERENCE_ADDRESS: "http://0.0.0.0:${TORCHSERVE_INFERENCE_PORT:-5014}"
      TS_MANAGEMENT_ADDRESS: "http://0.0.0.0:${TORCHSERVE_MANAGEMENT_PORT:-5015}"
      TS_MODEL_CONFIG: >- 
        {
        "headshot":{"1.0":{"defaultVersion":true,"minWorkers":1,"maxWorkers":1}},
        "resume-v4_en":{"1.0":{"defaultVersion":true,"minWorkers":3,"maxWorkers":3}},
        "resume-v4_multi":{"1.0":{"defaultVersion":true,"minWorkers":1,"maxWorkers":1}}
        }
      ENABLE_API_PROXY: "1"
    healthcheck:
      # Will still use other defaults from inference.Dockerfile
      start_period: 600s # 20 minutes, because we have to load all the models above

    deploy:
      # Remove the below to run on CPU only
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: all
              capabilities: [ gpu, utility, compute ]
    depends_on:
      web:
        condition: service_healthy

  db:
    image: affinda/affinda-db:6.31.47
    restart: always
    user: postgres
    environment:
      POSTGRES_DB: affinda
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_PORT_NUMBER: "${DB_PORT:-5432}"
    healthcheck:
      test: "pg_isready -q -d affinda -U postgres --port ${DB_PORT:-5432}"
      interval: 2s
    ports:
      - "${DB_PORT:-5432}:${DB_PORT:-5432}"
    volumes:
      - pgdata_selfhosted:/var/lib/postgresql/data


  redis:
    image: affinda/affinda-redis:6.31.47
    ports:
      - "6379:6379"

  # APPS Services
  web:
    image: affinda/affinda-selfhosted:6.31.47
    restart: always
    ports:
      - "${HOST_PORT:-80}:80"
    environment:
      APPS_MODE: "WEB_SELFHOSTED"
      SENTRY_ENABLED: "${SENTRY_ENABLED:-0}"
      SENTRY_DSN_TYPE: "${SENTRY_DSN_TYPE:-DEV}"
      DJANGO_SECRET_KEY: "5TS1pUeIwzdPlpPunaEGiMyznTPWEH0nwwMHNg78kSb111BlqK9Juh123456789X"
      DJANGO_SETTINGS_MODULE: "config.settings.selfhosted"
      DJANGO_SUPERUSER_PASSWORD: "changeme"
      API_ROOT_URL: "http://api.localhost:80"
      HOME: "/opt/affinda"
      PYTHONUNBUFFERED: "1"
      SENTRY_ENVIRONMENT: "${SENTRY_ENVIRONMENT:-selfhosted}"
      # DOCKER specific ENV VARS defaults are in config.settings.base
      TEXT_EXTRACTION_PORT: "${TEXT_EXTRACTION_PORT:-5010}"
      OCR_PORT: "${OCR_PORT:-5011}"
      PDFKIT_PORT: "${PDFKIT_PORT:-5012}"
      LIBRE_OFFICE_PORT: "${LIBRE_OFFICE_PORT:-5013}"
      TORCHSERVE_INFERENCE_PORT: "${TORCHSERVE_INFERENCE_PORT:-5014}"
      TORCHSERVE_MANAGEMENT_PORT: "${TORCHSERVE_MANAGEMENT_PORT:-5015}"
      DB_LOCAL_CONNECTION_POOLING: "1"
      DB_HOST: db
      DB_NAME: affinda
      DB_PASS: password
      DB_PORT: "${DB_PORT:-5432}"
      DB_SSL_MODE: disable
      DB_USER: postgres
      REDIS_PORT: "6379"
      USE_ELASTICSEARCH: "1"
      ELASTICSEARCH_HOST: "opensearch"
      CELERY_TASK_SOFT_TIME_LIMIT: "${CELERY_TASK_SOFT_TIME_LIMIT:-60}"
      CELERY_TASK_TIME_LIMIT: "${CELERY_TASK_TIME_LIMIT:-90}"
      AUTO_REGISTER_MODELS: "1"
    healthcheck:
      test: "curl --fail http://localhost:80/status || exit 1"
      interval: 5s
      timeout: 20s
      start_period: 1200s # 20 minutes, starting can take a while if applying migrations
      retries: 10
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
      opensearch:
        condition: service_healthy
    volumes:
      - affinda_shared:/opt/shared/

  celery_worker:
    image: affinda/affinda-selfhosted:6.31.47
    environment:
      APPS_MODE: "CELERY_WORKER"
      CELERY_POOL_TYPE: "prefork"
      CELERY_WORKER_CONCURRENCY: "4"
      SENTRY_ENABLED: "0"
      SENTRY_DSN_TYPE: "${SENTRY_DSN_TYPE:-DEV}"
      DJANGO_SECRET_KEY: "5TS1pUeIwzdPlpPunaEGiMyznTPWEH0nwwMHNg78kSb111BlqK9Juh123456789X"
      DJANGO_SETTINGS_MODULE: "config.settings.selfhosted"
      DJANGO_SUPERUSER_PASSWORD: "changeme"
      HOME: "/opt/affinda"
      PYTHONUNBUFFERED: "1"
      SENTRY_ENVIRONMENT: "${SENTRY_ENVIRONMENT:-selfhosted}"
      # GPU specific params
      PRELOAD_SMALL_MODELS: "True"
      C_FORCE_ROOT: "1"
      CELERY_DEBUG_LEVEL: "INFO"
      # DOCKER specific ENV VARS defaults are in config.settings.base
      TEXT_EXTRACTION_PORT: "${TEXT_EXTRACTION_PORT:-5010}"
      OCR_PORT: "${OCR_PORT:-5011}"
      PDFKIT_PORT: "${PDFKIT_PORT:-5012}"
      LIBRE_OFFICE_PORT: "${LIBRE_OFFICE_PORT:-5013}"
      TORCHSERVE_INFERENCE_PORT: "${TORCHSERVE_INFERENCE_PORT:-5014}"
      TORCHSERVE_MANAGEMENT_PORT: "${TORCHSERVE_MANAGEMENT_PORT:-5015}"
      DB_LOCAL_CONNECTION_POOLING: "1"
      DB_HOST: db
      DB_NAME: affinda
      DB_PASS: password
      DB_PORT: "${DB_PORT:-5432}"
      DB_SSL_MODE: disable
      DB_USER: postgres
      REDIS_PORT: "6379"
      USE_ELASTICSEARCH: "1"
      ELASTICSEARCH_HOST: "opensearch"
      CELERY_TASK_SOFT_TIME_LIMIT: "${CELERY_TASK_SOFT_TIME_LIMIT:-60}"
      CELERY_TASK_TIME_LIMIT: "${CELERY_TASK_TIME_LIMIT:-90}"
      AUTO_REGISTER_MODELS: "1"
    deploy:
      replicas: 1
    volumes:
      - affinda_shared:/opt/shared/
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
      web:
        condition: service_healthy
      ocr:
        condition: service_healthy
      text_extraction:
        condition: service_healthy
      pdfkit:
        condition: service_healthy
      libre_office:
        condition: service_healthy
      inference:
        condition: service_healthy
      opensearch:
        condition: service_healthy

  celery_beat:
    image: affinda/affinda-selfhosted:6.31.47
    environment:
      APPS_MODE: "CELERY_BEAT"
      CELERY_POOL_TYPE: "prefork"
      CELERY_WORKER_CONCURRENCY: "1"
      SENTRY_ENABLED: "${SENTRY_ENABLED:-0}"
      SENTRY_DSN_TYPE: "${SENTRY_DSN_TYPE:-DEV}"
      DJANGO_SECRET_KEY: "5TS1pUeIwzdPlpPunaEGiMyznTPWEH0nwwMHNg78kSb111BlqK9Juh123456789X"
      DJANGO_SETTINGS_MODULE: "config.settings.selfhosted"
      DJANGO_SUPERUSER_PASSWORD: "changeme"
      HOME: "/opt/affinda"
      PYTHONUNBUFFERED: "1"
      # GPU specific params
      PRELOAD_SMALL_MODELS: "False"
      C_FORCE_ROOT: "1"
      CELERY_DEBUG_LEVEL: "INFO"
      SENTRY_ENVIRONMENT: "${SENTRY_ENVIRONMENT:-selfhosted}"
      # DOCKER specific ENV VARS defaults are in config.settings.base
      TEXT_EXTRACTION_PORT: "${TEXT_EXTRACTION_PORT:-5010}"
      OCR_PORT: "${OCR_PORT:-5011}"
      PDFKIT_PORT: "${PDFKIT_PORT:-5012}"
      LIBRE_OFFICE_PORT: "${LIBRE_OFFICE_PORT:-5013}"
      TORCHSERVE_INFERENCE_PORT: "${TORCHSERVE_INFERENCE_PORT:-5014}"
      TORCHSERVE_MANAGEMENT_PORT: "${TORCHSERVE_MANAGEMENT_PORT:-5015}"
      DB_LOCAL_CONNECTION_POOLING: "1"
      DB_HOST: db
      DB_NAME: affinda
      DB_PASS: password
      DB_PORT: "${DB_PORT:-5432}"
      DB_SSL_MODE: disable
      DB_USER: postgres
      REDIS_PORT: "6379"
      USE_ELASTICSEARCH: "1"
      ELASTICSEARCH_HOST: "opensearch"
    deploy:
      replicas: 1
    volumes:
      - affinda_shared:/opt/shared/
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
      web:
        condition: service_healthy
      ocr:
        condition: service_healthy
      text_extraction:
        condition: service_healthy
      pdfkit:
        condition: service_healthy
      libre_office:
        condition: service_healthy
      inference:
        condition: service_healthy
      opensearch:
        condition: service_healthy

  opensearch:
    image: opensearchproject/opensearch:2.8.0
    environment:
      discovery.type: "single-node"
      OPENSEARCH_JAVA_OPTS: "-Xms512m -Xmx512m" # minimum and maximum Java heap size, should be half of mem_limit
      plugins.security.disabled: "true"
      bootstrap.memory_lock: "true" # along with the memlock settings below, disables swapping
      cluster.routing.allocation.disk.threshold_enabled: "false" # disables low disk watermark
    deploy:
      resources:
        limits:
          memory: 2g
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536 # maximum number of open files for the OpenSearch user, set to at least 65536 on modern systems
        hard: 65536
    ports:
      - "9200:9200"
    volumes:
      - opensearch-data:/usr/share/opensearch/data
    healthcheck:
      test: "curl --fail 127.0.0.1:9200 || exit 1"
      interval: 5s
      timeout: 20s
      retries: 10
      start_period: 120s